{"ast":null,"code":"var _jsxFileName = \"E:\\\\mohamed\\\\my_projects\\\\React.js training\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Event.js\";\n// import { useEffect, useState } from 'react';\n\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  const events = Use;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","events","Use","children","fetchedEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/mohamed/my_projects/React.js training/12-adv-starting-project/frontend/src/pages/Event.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const events = Use\r\n\r\n    return (\r\n        <>\r\n            {/* <div style={{ textAlign: 'center' }}>\r\n                {isLoading && <p>Loading...</p>}\r\n                {error && <p>{error}</p>}\r\n            </div> */}\r\n\r\n            {/* {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />} */}\r\n            <EventsList events={fetchedEvents} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EventsPage;"],"mappings":";AAAA;;AAEA,OAAOA,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAClB,MAAMC,MAAM,GAAGC,GAAG;EAElB,oBACIL,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAOIN,OAAA,CAACF,UAAU;MAACM,MAAM,EAAEG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACvC,CAAC;AAEX;AAACC,EAAA,GAdQT,UAAU;AAgBnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}