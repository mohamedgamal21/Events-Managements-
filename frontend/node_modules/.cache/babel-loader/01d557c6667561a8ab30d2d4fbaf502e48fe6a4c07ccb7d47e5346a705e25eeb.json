{"ast":null,"code":"var _jsxFileName = \"E:\\\\mohamed\\\\my_projects\\\\React.js training\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// import { Children } from 'react';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Event from './pages/Event';\nimport HomePgae from './pages/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  children: [{\n    path: '',\n    element: /*#__PURE__*/_jsxDEV(HomePgae, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: '/event',\n    element: /*#__PURE__*/_jsxDEV(Event, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }, this)\n  }, {\n    path: '/event/:eventId',\n    element: ''\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Event","HomePgae","jsxDEV","_jsxDEV","router","path","children","element","fileName","_jsxFileName","lineNumber","columnNumber","App","_c","$RefreshReg$"],"sources":["E:/mohamed/my_projects/React.js training/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// import { Children } from 'react';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport Event from './pages/Event';\n\nimport HomePgae from './pages/Home';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    \n    children: [\n      {\n        path: '', element: <HomePgae/>\n      },\n      {\n        path: '/event', element: <Event />\n      },\n      {path: '/event/:eventId', element: ''},\n    ],\n  }\n])\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,KAAK,MAAM,eAAe;AAEjC,OAAOC,QAAQ,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGN,mBAAmB,CAAC,CACjC;EACEO,IAAI,EAAE,GAAG;EAETC,QAAQ,EAAE,CACR;IACED,IAAI,EAAE,EAAE;IAAEE,OAAO,eAAEJ,OAAA,CAACF,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAC/B,CAAC,EACD;IACEN,IAAI,EAAE,QAAQ;IAAEE,OAAO,eAAEJ,OAAA,CAACH,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnC,CAAC,EACD;IAACN,IAAI,EAAE,iBAAiB;IAAEE,OAAO,EAAE;EAAE,CAAC;AAE1C,CAAC,CACF,CAAC;AAEF,SAASK,GAAGA,CAAA,EAAG;EACb,oBAAOT,OAAA,CAACJ,cAAc;IAACK,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACE,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}