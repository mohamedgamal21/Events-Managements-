{"ast":null,"code":"var _jsxFileName = \"E:\\\\mohamed\\\\my_projects\\\\React.js training\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsDetails.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { Await, defer, json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailsPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailsPage, \"OA7jEBfO3UI1aCR8ByPCigEHUtE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\n;\nexport default EventDetailsPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"couldn't fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  return resData.event;\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: \"couldn't fetch events\"}, {status: 500}));\n    throw json({\n      message: \"couldn't fetch events\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  return resData.events;\n}\nexport async function Loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\n_c2 = Loader;\nexport async function actions({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"couldn't delete event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"EventDetailsPage\");\n$RefreshReg$(_c2, \"Loader\");","map":{"version":3,"names":["Suspense","Await","defer","json","redirect","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","Loader","request","params","eventId","_c2","actions","method","$RefreshReg$"],"sources":["E:/mohamed/my_projects/React.js training/12-adv-starting-project/frontend/src/pages/EventsDetails.js"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport { Await, defer, json, redirect, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventDetailsPage() {\r\n    const {event, events} = useRouteLoaderData('event-detail');\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading....</p>} >\r\n                <Await resolve={event}>\r\n                    {loadedEvent => <EventItem event={loadedEvent} />}\r\n                </Await>\r\n            </Suspense>\r\n            <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading....</p>} >\r\n                <Await resolve={events}>\r\n                    {loadedEvents => <EventsList events={loadedEvents} />}\r\n                </Await>\r\n            </Suspense>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default EventDetailsPage;\r\n\r\nasync function loadEvent(id) {\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n    if (!response.ok) {\r\n        throw json(\r\n            { message: \"couldn't fetch details for selected event\" },\r\n            {\r\n                status: 500\r\n            }\r\n        );\r\n    }\r\n        const resData = await response.json();\r\n        return resData.event;\r\n    \r\n}\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        // throw new Response(JSON.stringify({message: \"couldn't fetch events\"}, {status: 500}));\r\n        throw json({ message: \"couldn't fetch events\" }, { status: 500 })\r\n    }\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    \r\n}\r\n\r\nexport async function Loader({ request, params }) {\r\n    const id = params.eventId\r\n\r\n    return defer({\r\n        event: loadEvent(id),\r\n        events: loadEvents(),\r\n    })\r\n}\r\n    export async function actions({ request, params }) {\r\n        const id = params.eventId;\r\n\r\n        const response = await fetch('http://localhost:8080/events/' + id, {\r\n            method: request.method\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw json({ message: \"couldn't delete event\" }, { status: 500 });\r\n        }\r\n\r\n        return redirect('/events');\r\n\r\n    }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}